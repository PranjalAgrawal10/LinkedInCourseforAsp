@using Microsoft.AspNetCore.Components.Web
@using ConsoleCrafts.Models
@using ConsoleCrafts.Services
@inject JsonFileProductsService ProductsService


<div class="row card-columns card-group">
    @foreach (var product in ProductsService.GetProducts())
    {
        <div class="col m-2">
            <div class="card" style="width: 18rem;">
                <div class="card-img" style="background-image: url('@product.Image')"></div>
                <div class="card-body">
                    <h5>@product.Title</h5>
                </div>
                <div class="card-footer">
                    <small class="text-muted">
                        <button @onclick="(e) => SelectProduct(product.Id)"
                                data-bs-toggle="modal" data-bs-target="#productModal" class="btn btn-primary"> More Info</button>
                    </small>

                </div>
            </div>
        </div>
    }
</div>

<div class="modal fade" id="productModal" tabindex="-1" role="dialog" aria-labelledby="productTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        @if (selectedProduct != null)
        {
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="productTitle">@selectedProduct.Title</h5>
                    <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="card">
                        <div class="card-img" style="background-image: url('@selectedProduct.Image');">
                        </div>
                        <div class="card-body">
                            <p class="card-text">@selectedProduct.Description</p>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    @if (voteCount == 0)
                    {
                        <span>Be the first to vote!</span>
                    }
                    else
                    {
                        <span>@voteCount @voteLabel</span>
                    }
                    @for (int i = 1; i < 6; i++)
                    {
                        if (i <= currentRating)
                        {
                            <i class="fa-solid fa-star" style="color: #FFD43B;"  @onclick="(e => SubmitRating(i))"></i>
                        }
                        else
                        {
                            <i class="fa-regular fa-star" @onclick="(e => SubmitRating(i))"></i>
                        }
                    }
                </div>
            </div>
        }
    </div>
</div>

<script src="https://kit.fontawesome.com/11acbf9ca7.js" crossorigin="anonymous"></script>
@* <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> *@

@code {
    Product? selectedProduct;
    string? selectedProductId;

    void SelectProduct(string productId)
    {
        selectedProductId = productId;
        selectedProduct = ProductsService.GetProducts().First(x => x.Id == productId);
        GetCurrentRating();
    }

    int currentRating = 0;
    int voteCount = 0;
    string? voteLabel;

    void GetCurrentRating()
    {
        if (selectedProduct?.Ratings == null)
        {
            currentRating = 0;
            voteCount = 0;
        }
        else
        {
            voteCount = selectedProduct.Ratings.Count();
            voteLabel = voteCount > 1 ? "Votes" : "Vote";
            currentRating = selectedProduct.Ratings.Sum() / voteCount;
        }

        System.Console.WriteLine($"Current rating for {selectedProduct?.Id}: {currentRating}");
    }

    void SubmitRating(int rating)
    {
        System.Console.WriteLine($"Rating received for {selectedProduct?.Id}: {rating}");
        if (selectedProductId == null)
            return;
        ProductsService.AddRating(selectedProductId, rating);
        SelectProduct(selectedProductId);
    }
}